name: 'Run Terrafrom Plan'

on: pull_request

jobs:
  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "main"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.5
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform plan
        id: terraform_plan
        run: terraform plan var="aws_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_key_secret=${{ secrets.AWS_KEY_SECRET }}" -out="plan.in" -no-color > plan.log
      - name: Upload plan
        uses: actions/upload-artifact@v2
        with:
          name: tf-plan
          path: plan.in
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          if: always()
          script: |
            const fs = require('fs');
            const plan_log = fs.readFileSync("plan.log");

            const output = `
            #### Terraform Format and Style ðŸ–Œ  : \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization âš™ : \`${{ steps.init.outcome }}\`
            #### Terraform Plan ðŸ“– : \`${{ steps.terraform_plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${plan_log}\`\`\`

            </details>


            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
              })
      # - name: Post PR Comment
      #   uses: mshick/add-pr-comment@v1
      #   with:
      #     message: |
      #       Terraform Plan:
            
      #       ${{ steps.terraform_plan.outputs.stdout }}
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     repo-token-user-login: 'github-actions[bot]'
      #     allow-repeats: true
          

      

  